"""
상자들이 쌓여있는 방이 있다. 방이 오른쪽으로 90도 회전하여 상자들이 중력의 영향을 받아 낙하한다고 할 때, 낙차가 가장 큰 상자를 구하여 그 낙차를 리턴 하는 프로그램을 작성하시오.
중력은 회전이 완료된 후 적용된다.
상자들은 모두 한쪽 벽면에 붙여진 상태로 쌓여 2차원의 형태를 이루며 벽에서 떨어져서 쌓인 상자는 없다.

아래 예) 총 26개의 상자가 회전 후, 오른쪽 방 그림의 상태가 된다. A 상자의 낙차가 7로 가장 크므로 7을 리턴하면 된다.
회전 결과, B상자의 낙차는 6, C상자의 낙차는 1이다.

<제한 조건>
첫줄에는 테스트케이스의 수가 주어지고, 각 테스트 케이스 마다 가로길이 N이 주어지고,
아래행에 상자의 높이가 주어진다.
방의 가로길이( 5<=N<=100),
상자는 최소 0, 최대 100 높이로 쌓을 수 있다.

입력
3
9
7 4 2 0 0 6 0 7 0
10
1 22 87 70 42 15 5 79 9 70
20
29 86 25 99 9 94 44 34 31 25 86 43 43 86 79 81 43 55 89 18

출력
#1 7
#2 7
#3 16
"""

T = int(input())
for tc in range(1, T+1):
    N = int(input())
    height = list(map(int, input().split()))
    max_drop = 0

    for i in range(N):
        drop = N - i - 1
        for j in range(i+1, N):
            if height[i] <= height[j]:
                drop -= 1
        if max_drop < drop:
            max_drop = drop

    print(f"#{tc} {max_drop}")